name: Build and Deploy to Azure Container Apps

permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - main
      - deploy/azure

env:
  DOCKER_IMAGE: iishanto/jobhunterbackend
  AZURE_RESOURCE_GROUP: iishanto
  AZURE_CONTAINER_APP_NAME: jobhunterbackend
  AZURE_LOCATION: westus2
  AZURE_CONTAINER_APP_ENV: managedEnvironment-iishanto-bc4e

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Install jq for JSON validation
      - name: Install jq
        run: sudo apt-get install -y jq

      # Create src/main/resources/credentials/jobhunter-service-account.json file from base64
      - name: Create jobhunter-service-account.json.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_ANDROID }}" | base64 -di > src/main/resources/credentials/jobhunter-service-account.json
        shell: bash
        
      # Validate google-services.json
      - name: Validate jobhunter-service-account.json.json
        run: |
          if [ -f src/main/resources/credentials/jobhunter-service-account.json ]; then
            jq . src/main/resources/credentials/jobhunter-service-account.json > /dev/null || { echo "Invalid JSON in google-services.json"; cat src/main/resources/credentials/jobhunter-service-account.json; exit 1; }
          else
            echo "src/main/resources/credentials/jobhunter-service-account.json not found"
            exit 1
          fi
        shell: bash
        
      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Log in to Azure
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Debug Azure Login (optional, remove after verification)
      - name: Debug Azure Login
        run: |
          az account show --query "{name:name, id:id}" -o tsv || echo "Failed to retrieve account details"
          az account list --query "[].{name:name, id:id}" -o tsv || echo "No subscriptions found"

      # Build and push Docker image

      - name: Build and push Docker image
        env:
          TAG: ${{ github.sha }}
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }}:${TAG} .
          docker push ${{ env.DOCKER_IMAGE }}:${TAG}
          

      # Deploy to Azure Container Apps
      - name: Deploy to Azure Container Apps
        env:
          TAG: ${{ github.sha }}
        run: |
          az containerapp update \
            --name ${{ env.AZURE_CONTAINER_APP_NAME }} \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --image ${{ env.DOCKER_IMAGE }}:${TAG} \
            --set-env-vars \
              "API_CLIENT_IDS=${{ secrets.API_CLIENT_IDS }}" \
              "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" \
              "DB_USER=${{ secrets.DB_USER }}" \
              "CREDENTIALS_FILE=${{ secrets.CREDENTIALS_FILE }}" \
              "FIREBASE_REALTIME_DATABASE_URL=${{ secrets.FIREBASE_REALTIME_DATABASE_URL }}" \
              "GEMINI_API_URL=${{ secrets.GEMINI_API_URL }}" \
              "GEMINI_KEY=${{ secrets.GEMINI_KEY }}" \
              "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" \
              "RELATIONAL_DATABASE_URL=${{ secrets.RELATIONAL_DATABASE_URL }}"
